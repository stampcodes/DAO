/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DAO, DAOInterface } from "../../contracts/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "enum DAO.GovernanceType",
        name: "_governanceType",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SharesBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "voteFor",
        type: "bool",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMember",
        type: "address",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "addProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "howManyShares",
        type: "uint256",
      },
    ],
    name: "addShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOfTokens",
        type: "uint256",
      },
    ],
    name: "buyShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "closeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_delegate",
        type: "address",
      },
    ],
    name: "delegateVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOfShares",
        type: "uint256",
      },
    ],
    name: "giveShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceType",
    outputs: [
      {
        internalType: "enum DAO.GovernanceType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isMemberOrAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "isProposalApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "address",
        name: "whoMadeTheProposal",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "againstCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightedVoteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightedProCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightedAgainstCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "removedMember",
        type: "address",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "howManyShares",
        type: "uint256",
      },
    ],
    name: "removeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "result",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleSaleStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "voteFor",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052612710600055620186a0600155662386f26fc100006002556001600360006101000a81548160ff0219169083151502179055503480156200004457600080fd5b5060405162002f1738038062002f1783398181016040528101906200006a919062000221565b81600860016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548160ff02191690836001811115620000d357620000d262000268565b5b02179055506002600660000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600281111562000141576200014062000268565b5b021790555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000297565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c18262000194565b9050919050565b620001d381620001b4565b8114620001df57600080fd5b50565b600081519050620001f381620001c8565b92915050565b600281106200020757600080fd5b50565b6000815190506200021b81620001f9565b92915050565b600080604083850312156200023b576200023a6200018f565b5b60006200024b85828601620001e2565b92505060206200025e858286016200020a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b612c7080620002a76000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638d8f2adb116100de578063c9d27afe11610097578063d1a93d1811610071578063d1a93d1814610419578063d671f87a14610435578063f851a44014610465578063fc0c546a1461048357610173565b8063c9d27afe146103b1578063ca6d56dc146103cd578063ce7c2ac2146103e957610173565b80638d8f2adb1461030357806399651db81461030d5780639abcc0cc14610329578063ab002b2f14610359578063ac71fe1814610377578063c65b61ca1461039357610173565b80632355183b116101305780632355183b1461022a57806324d7806c146102465780633a98ef39146102765780633c5940591461029457806368428a1b146102c757806387269729146102e557610173565b8063013cf08b146101785780630386a016146101b0578063049c5c49146101cc578063051097ef146101d65780630b1ca49a146101f25780631e7de3881461020e575b600080fd5b610192600480360381019061018d9190611a08565b6104a1565b6040516101a799989796959493929190611b15565b60405180910390f35b6101ca60048036038101906101c59190611a08565b610597565b005b6101d46106c0565b005b6101f060048036038101906101eb9190611cde565b610734565b005b61020c60048036038101906102079190611d66565b6108e4565b005b61022860048036038101906102239190611a08565b61099a565b005b610244600480360381019061023f9190611d93565b6109fd565b005b610260600480360381019061025b9190611d66565b610b40565b60405161026d9190611dee565b60405180910390f35b61027e610bbf565b60405161028b9190611e09565b60405180910390f35b6102ae60048036038101906102a99190611a08565b610bc5565b6040516102be9493929190611e24565b60405180910390f35b6102cf610c06565b6040516102dc9190611dee565b60405180910390f35b6102ed610c19565b6040516102fa9190611e09565b60405180910390f35b61030b610c1f565b005b61032760048036038101906103229190611a08565b610e10565b005b610343600480360381019061033e9190611a08565b610ec5565b6040516103509190611dee565b60405180910390f35b610361610ef0565b60405161036e9190611ee0565b60405180910390f35b610391600480360381019061038c9190611efb565b610f03565b005b61039b611056565b6040516103a89190611e09565b60405180910390f35b6103cb60048036038101906103c69190611f67565b61105c565b005b6103e760048036038101906103e29190611d66565b611487565b005b61040360048036038101906103fe9190611d66565b61153d565b6040516104109190611e09565b60405180910390f35b610433600480360381019061042e9190611a08565b611555565b005b61044f600480360381019061044a9190611d66565b611818565b60405161045c9190611dee565b60405180910390f35b61046d611915565b60405161047a9190611fa7565b60405180910390f35b61048b61193b565b6040516104989190612021565b60405180910390f35b60076020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546104ea9061206b565b80601f01602080910402602001604051908101604052809291908181526020018280546105169061206b565b80156105635780601f1061053857610100808354040283529160200191610563565b820191906000526020600020905b81548152906001019060200180831161054657829003601f168201915b50505050509080600201549080600301549080600401549080600501549080600601549080600701549080600a0154905089565b6105a033610b40565b6105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d6906120e8565b60405180910390fd5b60076000828152602001908152602001600020600a0154421015610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90612154565b60405180910390fd5b60076000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006106839190611961565b600282016000905560038201600090556004820160009055600582016000905560068201600090556007820160009055600a820160009055505050565b6106c933610b40565b610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff906120e8565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b61073d33611818565b61077c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610773906121c0565b60405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610822576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108199061222c565b60405180910390fd5b6000600760008581526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508281600101908161088d91906123ee565b50620151804261089d91906124ef565b81600a01819055507f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e43284846040516108d6929190612523565b60405180910390a150505050565b6108ed33610b40565b61092c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610923906120e8565b60405180910390fd5b6000600660000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600281111561099257610991611e69565b5b021790555050565b6109a333610b40565b6109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d9906120e8565b60405180910390fd5b806000808282546109f39190612553565b9250508190555050565b610a0633610b40565b610a45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3c906120e8565b60405180910390fd5b6000805411610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a80906125d3565b60405180910390fd5b600054811115610ace576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac59061263f565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1d91906124ef565b9250508190555080600080828254610b359190612553565b925050819055505050565b6000600280811115610b5557610b54611e69565b5b600660000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166002811115610bb757610bb6611e69565b5b149050919050565b60005481565b600080600080600060076000878152602001908152602001600020905080600201548160050154826003015483600401549450945094509450509193509193565b600360009054906101000a900460ff1681565b60025481565b610c2833610b40565b610c67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5e906120e8565b60405180910390fd5b6000600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610cc49190611fa7565b602060405180830381865afa158015610ce1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d059190612674565b905060008111610d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d41906126ed565b60405180910390fd5b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610dc992919061270d565b6020604051808303816000875af1158015610de8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0c919061274b565b5050565b610e1933610b40565b610e58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4f906120e8565b60405180910390fd5b60015481600054610e6991906124ef565b1115610eaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea1906127c4565b60405180910390fd5b80600080828254610ebb91906124ef565b9250508190555050565b6000806007600084815260200190815260200160002090508060070154816006015411915050919050565b600860009054906101000a900460ff1681565b610f0c33611818565b610f4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f42906121c0565b60405180910390fd5b600180811115610f5e57610f5d611e69565b5b600860009054906101000a900460ff166001811115610f8057610f7f611e69565b5b14610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790612856565b60405180910390fd5b806007600084815260200190815260200160002060080160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60015481565b61106533611818565b6110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109b906121c0565b60405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361114a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611141906128c2565b60405180910390fd5b6007600084815260200190815260200160002060090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156111eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e29061292e565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161126d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112649061299a565b60405180910390fd5b600060076000858152602001908152602001600020905060018160090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060020160008154809291906112f3906129ba565b9190505550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600501600082825461134b91906124ef565b9250508190555082156113d15780600301600081548092919061136d906129ba565b9190505550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548160060160008282546113c591906124ef565b92505081905550611446565b8060040160008154809291906113e6906129ba565b9190505550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600701600082825461143e91906124ef565b925050819055505b7f749addf8eadeff63c43be59c27331be5c6d4fc9e82bbfbcf162321c9b35a95b433858560405161147993929190612a02565b60405180910390a150505050565b61149033610b40565b6114cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c6906120e8565b60405180910390fd5b6001600660000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600281111561153557611534611e69565b5b021790555050565b60046020528060005260406000206000915090505481565b60011515600360009054906101000a900460ff161515146115ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a290612a85565b60405180910390fd5b600081116115ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e590612b17565b60405180910390fd5b6000600254826115fe9190612b66565b9050600054811115611645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163c90612be3565b60405180910390fd5b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016116a493929190612c03565b6020604051808303816000875af11580156116c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e7919061274b565b5080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461173791906124ef565b925050819055508060008082825461174f9190612553565b925050819055506000600281111561176a57611769611e69565b5b600660000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156117cc576117cb611e69565b5b036117db576117da33611487565b5b7f2b6fa6b8279eb0f7d69e4bab60ce5f4cdc476c1e1696c7a74610ad014657ca09338260405161180c92919061270d565b60405180910390a15050565b60006001600281111561182e5761182d611e69565b5b600660000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156118905761188f611e69565b5b148061190e57506002808111156118aa576118a9611e69565b5b600660000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561190c5761190b611e69565b5b145b9050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50805461196d9061206b565b6000825580601f1061197f575061199e565b601f01602090049060005260206000209081019061199d91906119a1565b5b50565b5b808211156119ba5760008160009055506001016119a2565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6119e5816119d2565b81146119f057600080fd5b50565b600081359050611a02816119dc565b92915050565b600060208284031215611a1e57611a1d6119c8565b5b6000611a2c848285016119f3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a6082611a35565b9050919050565b611a7081611a55565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ab0578082015181840152602081019050611a95565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ad882611a76565b611ae28185611a81565b9350611af2818560208601611a92565b611afb81611abc565b840191505092915050565b611b0f816119d2565b82525050565b600061012082019050611b2b600083018c611a67565b8181036020830152611b3d818b611acd565b9050611b4c604083018a611b06565b611b596060830189611b06565b611b666080830188611b06565b611b7360a0830187611b06565b611b8060c0830186611b06565b611b8d60e0830185611b06565b611b9b610100830184611b06565b9a9950505050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611beb82611abc565b810181811067ffffffffffffffff82111715611c0a57611c09611bb3565b5b80604052505050565b6000611c1d6119be565b9050611c298282611be2565b919050565b600067ffffffffffffffff821115611c4957611c48611bb3565b5b611c5282611abc565b9050602081019050919050565b82818337600083830152505050565b6000611c81611c7c84611c2e565b611c13565b905082815260208101848484011115611c9d57611c9c611bae565b5b611ca8848285611c5f565b509392505050565b600082601f830112611cc557611cc4611ba9565b5b8135611cd5848260208601611c6e565b91505092915050565b60008060408385031215611cf557611cf46119c8565b5b6000611d03858286016119f3565b925050602083013567ffffffffffffffff811115611d2457611d236119cd565b5b611d3085828601611cb0565b9150509250929050565b611d4381611a55565b8114611d4e57600080fd5b50565b600081359050611d6081611d3a565b92915050565b600060208284031215611d7c57611d7b6119c8565b5b6000611d8a84828501611d51565b91505092915050565b60008060408385031215611daa57611da96119c8565b5b6000611db885828601611d51565b9250506020611dc9858286016119f3565b9150509250929050565b60008115159050919050565b611de881611dd3565b82525050565b6000602082019050611e036000830184611ddf565b92915050565b6000602082019050611e1e6000830184611b06565b92915050565b6000608082019050611e396000830187611b06565b611e466020830186611b06565b611e536040830185611b06565b611e606060830184611b06565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611ea957611ea8611e69565b5b50565b6000819050611eba82611e98565b919050565b6000611eca82611eac565b9050919050565b611eda81611ebf565b82525050565b6000602082019050611ef56000830184611ed1565b92915050565b60008060408385031215611f1257611f116119c8565b5b6000611f20858286016119f3565b9250506020611f3185828601611d51565b9150509250929050565b611f4481611dd3565b8114611f4f57600080fd5b50565b600081359050611f6181611f3b565b92915050565b60008060408385031215611f7e57611f7d6119c8565b5b6000611f8c858286016119f3565b9250506020611f9d85828601611f52565b9150509250929050565b6000602082019050611fbc6000830184611a67565b92915050565b6000819050919050565b6000611fe7611fe2611fdd84611a35565b611fc2565b611a35565b9050919050565b6000611ff982611fcc565b9050919050565b600061200b82611fee565b9050919050565b61201b81612000565b82525050565b60006020820190506120366000830184612012565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061208357607f821691505b6020821081036120965761209561203c565b5b50919050565b7f596f7520617265206e6f74207468652041646d696e0000000000000000000000600082015250565b60006120d2601583611a81565b91506120dd8261209c565b602082019050919050565b60006020820190508181036000830152612101816120c5565b9050919050565b7f50726f706f73616c206973207374696c6c206163746976650000000000000000600082015250565b600061213e601883611a81565b915061214982612108565b602082019050919050565b6000602082019050818103600083015261216d81612131565b9050919050565b7f596f7520646f206e6f7420686176652074686520636f727265637420726f6c65600082015250565b60006121aa602083611a81565b91506121b582612174565b602082019050919050565b600060208201905081810360008301526121d98161219d565b9050919050565b7f54686520496420697320616c72656164792074616b656e000000000000000000600082015250565b6000612216601783611a81565b9150612221826121e0565b602082019050919050565b6000602082019050818103600083015261224581612209565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026122ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612271565b6122b88683612271565b95508019841693508086168417925050509392505050565b60006122eb6122e66122e1846119d2565b611fc2565b6119d2565b9050919050565b6000819050919050565b612305836122d0565b612319612311826122f2565b84845461227e565b825550505050565b600090565b61232e612321565b6123398184846122fc565b505050565b5b8181101561235d57612352600082612326565b60018101905061233f565b5050565b601f8211156123a2576123738161224c565b61237c84612261565b8101602085101561238b578190505b61239f61239785612261565b83018261233e565b50505b505050565b600082821c905092915050565b60006123c5600019846008026123a7565b1980831691505092915050565b60006123de83836123b4565b9150826002028217905092915050565b6123f782611a76565b67ffffffffffffffff8111156124105761240f611bb3565b5b61241a825461206b565b612425828285612361565b600060209050601f8311600181146124585760008415612446578287015190505b61245085826123d2565b8655506124b8565b601f1984166124668661224c565b60005b8281101561248e57848901518255600182019150602085019450602081019050612469565b868310156124ab57848901516124a7601f8916826123b4565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006124fa826119d2565b9150612505836119d2565b925082820190508082111561251d5761251c6124c0565b5b92915050565b60006040820190506125386000830185611b06565b818103602083015261254a8184611acd565b90509392505050565b600061255e826119d2565b9150612569836119d2565b9250828203905081811115612581576125806124c0565b5b92915050565b7f4e6f2073686172657320617661696c61626c6500000000000000000000000000600082015250565b60006125bd601383611a81565b91506125c882612587565b602082019050919050565b600060208201905081810360008301526125ec816125b0565b9050919050565b7f4e6f7420656e6f7567682073686172657320617661696c61626c650000000000600082015250565b6000612629601b83611a81565b9150612634826125f3565b602082019050919050565b600060208201905081810360008301526126588161261c565b9050919050565b60008151905061266e816119dc565b92915050565b60006020828403121561268a576126896119c8565b5b60006126988482850161265f565b91505092915050565b7f4e6f20746f6b656e7320746f2077697468647261770000000000000000000000600082015250565b60006126d7601583611a81565b91506126e2826126a1565b602082019050919050565b60006020820190508181036000830152612706816126ca565b9050919050565b60006040820190506127226000830185611a67565b61272f6020830184611b06565b9392505050565b60008151905061274581611f3b565b92915050565b600060208284031215612761576127606119c8565b5b600061276f84828501612736565b91505092915050565b7f43616e6e6f7420657863656564206d617820736861726573206c696d69740000600082015250565b60006127ae601e83611a81565b91506127b982612778565b602082019050919050565b600060208201905081810360008301526127dd816127a1565b9050919050565b7f44656c65676174696f6e206f6e6c7920616c6c6f77656420696e206c6971756960008201527f642064656d6f6372616379000000000000000000000000000000000000000000602082015250565b6000612840602b83611a81565b915061284b826127e4565b604082019050919050565b6000602082019050818103600083015261286f81612833565b9050919050565b7f54686520496420646f65736e2774206578697374000000000000000000000000600082015250565b60006128ac601483611a81565b91506128b782612876565b602082019050919050565b600060208201905081810360008301526128db8161289f565b9050919050565b7f596f75206861766520616c726561647920766f7465642e000000000000000000600082015250565b6000612918601783611a81565b9150612923826128e2565b602082019050919050565b600060208201905081810360008301526129478161290b565b9050919050565b7f596f752068617665206e6f2073686172657320746f20766f746520776974682e600082015250565b6000612984602083611a81565b915061298f8261294e565b602082019050919050565b600060208201905081810360008301526129b381612977565b9050919050565b60006129c5826119d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036129f7576129f66124c0565b5b600182019050919050565b6000606082019050612a176000830186611a67565b612a246020830185611b06565b612a316040830184611ddf565b949350505050565b7f53616c65206973206e6f74206163746976650000000000000000000000000000600082015250565b6000612a6f601283611a81565b9150612a7a82612a39565b602082019050919050565b60006020820190508181036000830152612a9e81612a62565b9050919050565b7f596f75206d7573742073656e6420746f6b656e7320746f20627579207368617260008201527f65732e0000000000000000000000000000000000000000000000000000000000602082015250565b6000612b01602383611a81565b9150612b0c82612aa5565b604082019050919050565b60006020820190508181036000830152612b3081612af4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b71826119d2565b9150612b7c836119d2565b925082612b8c57612b8b612b37565b5b828204905092915050565b7f4e6f7420656e6f7567682073686172657320617661696c61626c652e00000000600082015250565b6000612bcd601c83611a81565b9150612bd882612b97565b602082019050919050565b60006020820190508181036000830152612bfc81612bc0565b9050919050565b6000606082019050612c186000830186611a67565b612c256020830185611a67565b612c326040830184611b06565b94935050505056fea2646970667358221220726c0a8ab9dc997b0a1a65300143d4450b0097fbe2e786e72f7c90b4094eadc664736f6c63430008180033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    tokenAddress: AddressLike,
    _governanceType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      tokenAddress,
      _governanceType,
      overrides || {}
    );
  }
  override deploy(
    tokenAddress: AddressLike,
    _governanceType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      tokenAddress,
      _governanceType,
      overrides || {}
    ) as Promise<
      DAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DAO__factory {
    return super.connect(runner) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new Interface(_abi) as DAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DAO {
    return new Contract(address, _abi, runner) as unknown as DAO;
  }
}
